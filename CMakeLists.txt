cmake_minimum_required (VERSION 3.20)

project ("Revolution")     

if(RE_PLATFORM STREQUAL "Windows")
    add_compile_definitions(RE_PLATFORM_WINDOWS=1)
    message(STATUS "#define RE_PLATFORM_WINDOWS")
elseif(RE_PLATFORM STREQUAL "Linux")
    add_compile_definitions(RE_PLATFORM_LINUX=1)
    message(STATUS "#define RE_PLATFORM_LINUX")
elseif(RE_PLATFORM STREQUAL "macOS")
    add_compile_definitions(RE_PLATFORM_MACOS=1)
    message(STATUS "#define RE_PLATFORM_MACOS")
else()
    message(FATAL_ERROR "Unsupported platform: ${RE_PLATFORM}")
endif()

if(RE_CONFIG STREQUAL "Debug")
    add_compile_definitions(RE_DEBUG=1 RE_DEVELOPMENT=1)
    message(STATUS "#define RE_DEBUG")
elseif(RE_CONFIG STREQUAL "Release")
    add_compile_definitions(RE_RELEASE=1 RE_DEVELOPMENT=1)
    message(STATUS "#define RE_RELEASE")
elseif(RE_CONFIG STREQUAL "Shipping")
    add_compile_definitions(RE_SHIPPING=1)
    message(STATUS "#define RE_SHIPPING")
else()
    message(FATAL_ERROR "Unknown build configuration: ${RE_CONFIG}")
endif()

if(RE_ARCH STREQUAL "x64")
    add_compile_definitions(RE_ARCH_X64=1)
    message(STATUS "#define RE_ARCH_X64")
elseif(RE_ARCH STREQUAL "arm64")
    add_compile_definitions(RE_ARCH_ARM64=1)
    message(STATUS "#define RE_ARCH_ARM64")
else()
    message(FATAL_ERROR "Unknown build arch: ${RE_ARCH}")
endif()

if (POLICY CMP0141)
  cmake_policy(SET CMP0141 NEW)
  set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT "$<IF:$<AND:$<C_COMPILER_ID:MSVC>,$<CXX_COMPILER_ID:MSVC>>,$<$<CONFIG:Debug,RelWithDebInfo>:EditAndContinue>,$<$<CONFIG:Debug,RelWithDebInfo>:ProgramDatabase>>")
endif()

add_subdirectory ("Engine")
add_subdirectory ("Editor")